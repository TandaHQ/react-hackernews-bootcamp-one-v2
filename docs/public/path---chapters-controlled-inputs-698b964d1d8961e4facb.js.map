{"version":3,"sources":["webpack:///path---chapters-controlled-inputs-698b964d1d8961e4facb.js","webpack:///./.cache/json/chapters-controlled-inputs.json"],"names":["webpackJsonp","335","module","exports","data","markdownRemark","html","frontmatter","date","path","title","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,+wOAA6mOC,aAAobC,KAAA,iBAAAC,KAAA,8BAAAC,MAAA,uBAA2FC","file":"path---chapters-controlled-inputs-698b964d1d8961e4facb.js","sourcesContent":["webpackJsonp([129516275151615],{\n\n/***/ 335:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h1>Controlled Inputs</h1>\\n<p>In this chapter we will be learning how input state is managed in react.</p>\\n<h2>Inputs In React vs Standard Web</h2>\\n<p>In react inputs behave quite different to standard web inputs. Standard web inputs, for example, completely maintain there own state. This is not the normal case in react. Inputs are typically assigned there current state via the 'value' props.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>input</span>\\n  <span class=\\\"token attr-name\\\">value</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">'</span>the text that is currently in the input<span class=\\\"token punctuation\\\">'</span></span>\\n<span class=\\\"token punctuation\\\">/></span></span>\\n</code></pre>\\n      </div>\\n<p>The reason for this is, when we write react, we subscribe to a architecture concept known as unidirectional data flow.</p>\\n<h1>Unidirectional Data Flow</h1>\\n<p>When following the unidirectional data flow paradigm, state is passed to the view and then handlers can update the state, causing a cycle of the view.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">          /---------\\\\\\n          |  STORE  | &lt;---------|\\n          \\\\---------/           |\\n               |                |\\n               |            /--------\\\\\\n               |----------&gt; |  VIEW  |\\n                            \\\\--------/</code></pre>\\n      </div>\\n<p>This pattern removes the coupling of the view from store and also simplifies the flow of data.</p>\\n<h1>An Example</h1>\\n<p>Best practice would be to store the state of our input in our container and to pass a handler defined on our container to the inputs onChange property. Heres an example:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">import</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// our view</span>\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">Username</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> onChange<span class=\\\"token punctuation\\\">,</span> value <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>input</span>\\n      <span class=\\\"token attr-name\\\">onChange</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>onChange<span class=\\\"token punctuation\\\">}</span></span>\\n      <span class=\\\"token attr-name\\\">value</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>value<span class=\\\"token punctuation\\\">}</span></span>\\n    <span class=\\\"token punctuation\\\">/></span></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token comment\\\">// our container</span>\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Container</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">constructor</span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">super</span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token comment\\\">// NOTE: if we want to call setState in our handler we</span>\\n    <span class=\\\"token comment\\\">//       will need to bint the handler to `this`</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>onFilterChange <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>onFilterChange<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">bind</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span> username<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">''</span> <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token function\\\">onFilterChange</span><span class=\\\"token punctuation\\\">(</span>event<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> username<span class=\\\"token punctuation\\\">:</span> event<span class=\\\"token punctuation\\\">.</span>target<span class=\\\"token punctuation\\\">.</span>value <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Username</span>\\n        <span class=\\\"token attr-name\\\">onChange</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>onFilterChange<span class=\\\"token punctuation\\\">}</span></span>\\n        <span class=\\\"token attr-name\\\">value</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">.</span>username<span class=\\\"token punctuation\\\">}</span></span>\\n      <span class=\\\"token punctuation\\\">/></span></span>\\n    <span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<h2>Excercise</h2>\\n<p>Lets add a filter input to our article list and use the value to filter the list of articles we display by name.</p>\\n<p><strong><em>Additional</em>excercise_</strong></p>\\n<p>If we search and there are no articles that match the filter we should show an empty state. Try add one.</p>\\n<p><img src=\\\"../images/article-filter.gif\\\" alt=\\\"article-filter\\\"></p>\",\"frontmatter\":{\"date\":\"March 22, 2018\",\"path\":\"/chapters/controlled-inputs\",\"title\":\"Controlled Inputs\"}}},\"pathContext\":{}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---chapters-controlled-inputs-698b964d1d8961e4facb.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h1>Controlled Inputs</h1>\\n<p>In this chapter we will be learning how input state is managed in react.</p>\\n<h2>Inputs In React vs Standard Web</h2>\\n<p>In react inputs behave quite different to standard web inputs. Standard web inputs, for example, completely maintain there own state. This is not the normal case in react. Inputs are typically assigned there current state via the 'value' props.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>input</span>\\n  <span class=\\\"token attr-name\\\">value</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">'</span>the text that is currently in the input<span class=\\\"token punctuation\\\">'</span></span>\\n<span class=\\\"token punctuation\\\">/></span></span>\\n</code></pre>\\n      </div>\\n<p>The reason for this is, when we write react, we subscribe to a architecture concept known as unidirectional data flow.</p>\\n<h1>Unidirectional Data Flow</h1>\\n<p>When following the unidirectional data flow paradigm, state is passed to the view and then handlers can update the state, causing a cycle of the view.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">          /---------\\\\\\n          |  STORE  | &lt;---------|\\n          \\\\---------/           |\\n               |                |\\n               |            /--------\\\\\\n               |----------&gt; |  VIEW  |\\n                            \\\\--------/</code></pre>\\n      </div>\\n<p>This pattern removes the coupling of the view from store and also simplifies the flow of data.</p>\\n<h1>An Example</h1>\\n<p>Best practice would be to store the state of our input in our container and to pass a handler defined on our container to the inputs onChange property. Heres an example:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">import</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// our view</span>\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">Username</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> onChange<span class=\\\"token punctuation\\\">,</span> value <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>input</span>\\n      <span class=\\\"token attr-name\\\">onChange</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>onChange<span class=\\\"token punctuation\\\">}</span></span>\\n      <span class=\\\"token attr-name\\\">value</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>value<span class=\\\"token punctuation\\\">}</span></span>\\n    <span class=\\\"token punctuation\\\">/></span></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token comment\\\">// our container</span>\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Container</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">constructor</span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">super</span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token comment\\\">// NOTE: if we want to call setState in our handler we</span>\\n    <span class=\\\"token comment\\\">//       will need to bint the handler to `this`</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>onFilterChange <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>onFilterChange<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">bind</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span> username<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">''</span> <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token function\\\">onFilterChange</span><span class=\\\"token punctuation\\\">(</span>event<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> username<span class=\\\"token punctuation\\\">:</span> event<span class=\\\"token punctuation\\\">.</span>target<span class=\\\"token punctuation\\\">.</span>value <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Username</span>\\n        <span class=\\\"token attr-name\\\">onChange</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>onFilterChange<span class=\\\"token punctuation\\\">}</span></span>\\n        <span class=\\\"token attr-name\\\">value</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">.</span>username<span class=\\\"token punctuation\\\">}</span></span>\\n      <span class=\\\"token punctuation\\\">/></span></span>\\n    <span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<h2>Excercise</h2>\\n<p>Lets add a filter input to our article list and use the value to filter the list of articles we display by name.</p>\\n<p><strong><em>Additional</em>excercise_</strong></p>\\n<p>If we search and there are no articles that match the filter we should show an empty state. Try add one.</p>\\n<p><img src=\\\"../images/article-filter.gif\\\" alt=\\\"article-filter\\\"></p>\",\"frontmatter\":{\"date\":\"March 22, 2018\",\"path\":\"/chapters/controlled-inputs\",\"title\":\"Controlled Inputs\"}}},\"pathContext\":{}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/chapters-controlled-inputs.json\n// module id = 335\n// module chunks = 129516275151615"],"sourceRoot":""}